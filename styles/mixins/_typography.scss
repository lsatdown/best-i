/**
*
* Cleartext Mixin
*
* For use on elements or whole pages needing text antialiasing.
*
**/
@mixin cleartext() {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

/**
*
* Type Setting Mixin
*
* Let all your relative type size worries wash away with this mixin.
* This mixin requires a target value, and a line height that will output a
* font-size in rems as a default. In addition, if a context value is given,
* the font size will be written in ems instead.
*
* Example (using rems):
*
* h1 {
*   @include type-setting(32, 36);
* }
*
* Output:
*
* h1 {
*   font-size: 2rem;
*   line-height: 1.125;
* }
*
*
**/
@mixin type-setting($target, $line-height, $context: false) {

    // Is the target value unitless?
    @if unitless($target) {

        // Is it relying on a context value?
        @if $context {

            // Is the context unitless? If so, write out the target value in ems.
            @if unitless($context) {
                font-size: ($target / $context) * 1em;
            } @else {
                @error 'Your value for `$context` is not unitless.';
            }
        }
        // Write out the target value in rems.
        @else {
            font-size: ($target / $root-font-size) * 1rem;
        }

    } @else {
        @error 'Your value for `$target` is not unitless.';
    }

    // Line Height should be unitless.
    @if unitless($line-height) {
        // Line height should almost always be unitless, just simple math.
        line-height: ($line-height / $target);
    } @else {
        @error 'Your value for `$line-height` is not unitless.';
    }

}
